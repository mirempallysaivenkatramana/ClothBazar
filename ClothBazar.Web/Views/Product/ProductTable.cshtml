@model ClothBazar.Web.ViewModels.ProductSearchViewModel
    @{
    ViewBag.Title = "ProductTable";
}
<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>search</label>
                    <input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>actions</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button style="color:white;background-color:yellowgreen;" class="btn-btn-danger form-control" type="button" id="SearchBtn">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button style="color:white;background-color:yellowgreen;" class="btn-btn-danger form-control" type="reset" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button style="color:white;background-color:yellowgreen;" class="btn-btn-danger form-control" type="button" id="newBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">product Name</th>
                <th class="font-weight-bold">category</th>
                <th class="font-weight-bold">Price</th>
                <th class="font-weight-bold wrap-td">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {
            foreach (var product in Model.Products)
            {
                <tr>

                    <td>@product.Name</td>
                    <td>
                        @if (product.Category != null)
                        {
                            <text>@product.Category.Name</text>
                        }
                        else
                        {
                            <text>-</text>
                        }

                    </td>
                    <td>@product.Price</td>
                    <td class="wrap-td">
                        <button class="editBtn" data-id="@product.Id">Edit</button>
                        <button class="deleteBtn" data-id="@product.Id">delete</button>
                        <button class="addtoCart" data-id="@product.Id">ADD TO CART</button>
                    </td>
                </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">no products found

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if(Model.pageNo!=1)
        {
        <button class="pageButtons" data-pageNo="@(Model.pageNo-1)">Previous</button>
        }
        <button class="pageButtons" data-pageNo="@(Model.pageNo+1)">Next</button>
    </div>
</div>
<script>
    $(".pageButtons").click(function () {
        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',//'/Product/productTable',
            data: {
                pageNo: $(this).attr("data-pageNo")
            }
        })
            .done(function (response) {
                $("#tablecontainer").html(response);
                focusAction();
            })

            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    //$("#NextRecords").click(function () {
    //    $.ajax({
    //        url: '/Product/productTable',
    //        data: {
    //            pageNo: $(this).attr("data-pageNo")
    //        }
    //    })
    //        .done(function (response) {
    //            $("#tablecontainer").html(response);
    //            focusAction();
    //        })

    //        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
    //            alert("fail");
    //        });
    //});

    $("#SearchBtn").click(function () {
        var searchvalue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',//'/Product/ProductTable',
            data: {
                search: searchvalue
            }
        })
            .done(function (response) {
                $("#tablecontainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#resetBtn").click(function () {
        var searchvalue ='';

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',//'/Product/ProductTable',
            data: {
                search: searchvalue
            }
        })
            .done(function (response) {
                $("#tablecontainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#newBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Product")',//'/Product/Create',
        })
            .done(function (response) {
                $("#actioncontainer").html(response);
                focusAction("actioncontainer");
            })

            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });
    $(".editBtn").click(function () {
        $.ajax({

            url: '@Url.Action("edit", "Product")',//'/Product/edit',
            data: {
                Id: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#actioncontainer").html(response);
                focusAction("actioncontainer");
            })

            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });
    $(".deleteBtn").click(function () {
        swal({
            title: "Confirm?",
            text: "Are you sure you want delete product?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                type: 'post',
                url: '@Url.Action("delete", "Product")',//'/Product/delete',
                data: {
                    Id: $(this).attr('data-id')
                }
            })
                .done(function (response) {
                    $("#tablecontainer").html(response);
                    swal("Recorded deleted successfully.", {
                        icon: "success",
                    });

                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("fail");

                });

                //} else {
                //    swal("Your imaginary file is safe!");
                }
            });

        //var confirmDelete = confirm("Are you sure you want delete product?");
        //if (confirmDelete) {
        //    $.ajax({
        //        type: 'post',
        //        url: '/Product/delete',
        //        data: {
        //            Id: $(this).attr('data-id')
        //        }
        //    })
        //        .done(function (response) {
        //            $("#tablecontainer").html(response);
        //        })
        //        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        //            alert("fail");
        //        });
        //}
    });
    var products = [];
    $(".addtoCart").click(function () {
        var productID = $(this).attr('data-id');
        products.push(productID);

        $.cookie('CartProducts',
            products.join('-'),
            { path: '/' }
        );

        alert("product added to cart.");
    });
    function focusAction() {
            $('html, body').animate({
                scrollTop: $("actioncontainer").offset().Top - 100
            }, 1000);
        }
</script>
