 @model ClothBazar.Web.ViewModels.OrdersDetailsViewModels
@{
    ViewBag.Title = "Checkout";
    //decimal totalbill = 0;
}

@*<h2>Checkout</h2>
@if (Model.CartProducts != null && Model.CartProducts.Count > 0)
{

    <div>
        @foreach (var product in Model.CartProducts)
        {
            var productquantity = Model.CartProductIds.Where(x => x == product.Id).Count();

            totalbill = totalbill + (productquantity * product.Price);

            <div>
                Name: @product.Name- Price: @product.Price Quantity:@productquantity Totalprice:@(product.Price*productquantity)
            </div>
        }
    </div>
    <div>
        lo@Model.CartProducts.Sum(x=>x.Price*(Model.CartProductIds.Where(productId => productId == x.Id))).Count();
        total=@totalbill
    </div>
}
else
{
    <div>
        no products in cart
    </div>

}*@

@if (Model != null && Model.Order != null)
{
    <section class="flow-row- main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                        <span class="badge badge-secondary badge-pill">3</span>
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var orderItem in Model.Order.OrderItems)
                        {
                           
                            <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@orderItem.ID">
                                <div>
                                    <h6 class="my-0">@orderItem.Product.Name-Qty:@orderItem.Quantity</h6>
                                    <small class="text-muted">@(orderItem.Product.Description.Length > 100 ? orderItem.Product.Description.Substring(0, 99) : orderItem.Product.Description)</small>
                                </div>
                                <span class="text-muted">$@orderItem.Product.Price-Total Price:@(orderItem.Quantity*orderItem.Product.Price)</span>
                            </li>
                        }

                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                            <strong>$@Model.Order.TotalAmount</strong>
                        </li>
                    </ul>

                    <form class="card p-2">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Promo code">
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-secondary">Redeem</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing address</h4>
                    <form class="needs-validation" novalidate>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="firstName">First name</label>
                                <input type="text" class="form-control" id="firstName" placeholder="" value="" required>
                                <div class="invalid-feedback">
                                    Valid first name is required.
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="lastName">Last name</label>
                                <input type="text" class="form-control" id="lastName" placeholder="" value="@Model.OrderBy.Name" required>

                            </div>
                        </div>



                        <div class="mb-3">
                            <label for="email">Email <span class="text-muted">(Optional)</span></label>
                            <input type="email" class="form-control" id="email" placeholder="you@example.com" value="@Model.OrderBy.Email">
                            <div class="invalid-feedback">
                                Please enter a valid email address for shipping updates.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" placeholder="1234 Main St" value="@Model.OrderBy.Address" required>
                            
                        </div>
                        <div class="mb-3">
                            <label for="address">Status</label>
                            <select name="Status" id="ChangeStatus">
                                @foreach(var avaliableStatus in Model.AvaliableStatuses)
                                {
                                    var isSelectedStatus = avaliableStatus == Model.Order.Status;
                                    <option @(isSelectedStatus?"selected":string.Empty)>@avaliableStatus</option>
                                }
                            </select>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
    
    <script>
        $("#ChangeStatus").change(function () {
            $.ajax({
            url: '@Url.Action("ChangeStatus", "Order")',/*'/Product/productTable',*/
            data: {
                status: $("#ChangeStatus").val(),
                ID:'@Model.Order.Id'
            }
        })
                .done(function (response) {
                    if (response.Success)
                    {
                        swal({
                            title: "Done",
                            text: "Your Order has been updated",
                            icon: "Success",
                        }) }
                    else
                    {
                        swal({
                            title: "error",
                            text: "unable to update order",
                            icon: "warning",
                        })
                    }
        })

        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
        });
        })
    </script>


}
else
{
    <div>
        <b>Order Details not avaliable</b>
    </div>
}

