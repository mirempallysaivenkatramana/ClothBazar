
@using ClothBazar.Web.ViewModels;
@using ClothBazar.Web.Code;
@*@using static.ShopViewModel;*@
@{
    // ViewBag.Title = "Index";
}

<h2>Index</h2>
<h3>SHOP</h3>
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<section class="flat-row row-product-new">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-field" action="@Url.Action("Index","Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search..." value="" name="searchTerm" />
                            </label>
                            <input type="submit" class="search-submit" value="Search" />
                        </form>
                    </div>
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort-By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index","Shop",new{sortBy=(int)SortByEnums.Default,categoryID=Model.CategoryID})" class="@(Model.SortBy.Value?Model.SortBy.Value==(int)SortByEnums.Default?"active":string.Empty:string.Empty)">Default-Newest</a></li>
                            <li><a href="@Url.Action("Index","Shop",new{sortBy=(int)SortByEnums.Popularity,categoryID=Model.CategoryID})" class="@(Model.SortBy.Value?Model.SortBy.Value==(int)SortByEnums.Popularity?"active":string.Empty:string.Empty)">Popularity</a></li>
                            <li><a href="@Url.Action("Index","Shop",new{sortBy=(int)SortByEnums.PriceLowToHigh,categoryID=Model.CategoryID})" class="@(Model.SortBy.Value?Model.SortBy.Value==(int)SortByEnums.PriceLowToHigh?"active":string.Empty:string.Empty)">PriceLowToHigh</a></li>
                            <li><a href="@Url.Action("Index","Shop",new{sortBy=(int)SortByEnums.PriceHighTOLow,categoryID=Model.CategoryID})" class="@(Model.SortBy.Value?Model.SortBy.Value==(int)SortByEnums.PriceHighTOLow?"active":string.Empty:string.Empty)">PriceHighTOLow</a></li>
                        </ul>
                    </div>

                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured Categories
                        </h5>
                        <div class="tag-list">
                            @*@foreach (var category in Model.FeaturedCategories)
                            {
                                <a href="@Url.Action("Index", "Shop", new {categoryID=category.Id})" class="@(Model.CategoryID.HasValue&&Model.Category.Id.value==category.Id?"active":string.Empty)">@category.Name</a>
                            }*@
                        </div>
                    </div>
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                price:<input type="text" id="amount" disabled="" />
                            </p>
                        </div>
                    </div>
                    <a href="@Url.Action("Index","Shop")" class="btn btn-danger">Reset Filters</a>
                </div>
            </div>
            <div class="col-md-9">
                <div class="productsDiv">
                    @{
                        var filterProductsViewModel = new FilterProductsViewModel();
                        filterProductsViewModel.Products = Model.Products;
                        filterProductsViewModel.Pager = Model.Pager;

                        Html.RenderPartial("FilterProducts", filterProductsViewModel);
                    }
                </div>
            </div>
            <div class="col-md-9">

            </div>
        </div>
    </div>
</section>

@*<input id="selectedMinimumPrice" type="hidden" />
    <input id="selectedMaximumPrice" type="hidden" />*@

<script>
    var callTimeout;
    var priceSlider = $("Slide-range").slider({
        range: true,
        min: 0,
        max:@Model.MaximumPrice,
        values: [0,@Model.MaximumPrice],
        slide: function (event, ui) {
            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];


            $("#amount").val("$" + ui.values[0] + ".00" + "-" + ui.values[1] + ".00");

            clearTimeout(callTimeout);
            callTimeout = setTimeout(GetData(minPrice, maxPrice), 1000);


        }
    });



    function GetData() {

        console.log("GetData Called");

            $.ajax({
                url: '@Url.Action("FilterProducts", "Shop")',/*'/Product/productTable',*/
                data: {
                    sortBy:'@Model.SortBY',
                    categoryID:'@Model.CategoryID',
                    minimumPrice: priceSlider.slider("values",0),
                    maximumPrice: priceSlider.slider("values", 1)
                }
            })
                .done(function (response) {
                    $("#productsDiv").html(response);
                    focusAction();
                })

                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("fail");
                });
    }
</script>